apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  labels:
    {{- include "labels.common" $ | nindent 4 }}
  name: {{ include "resource.default.name" $ }}
  namespace: {{ $.Release.Namespace }}
spec:
  kubeadmConfigSpec:
    {{- if .Values.ignition.enable }}
    format: ignition
    ignition:
      containerLinuxConfig:
        additionalConfig: |
          systemd:
            units:
            - name: kubeadm.service
              enabled: true
              dropins:
              - name: 10-flatcar.conf
                contents: |
                  [Unit]
                  Requires=containerd.service
                  After=containerd.service
    {{- end }}
    clusterConfiguration:
      apiServer:
        certSANs:
          - 127.0.0.1
          - localhost
          - "api.{{ include "resource.default.name" $ }}.{{ .Values.baseDomain }}"
        extraArgs:
          cloud-provider: external
          enable-admission-plugins: {{ .Values.apiServer.enableAdmissionPlugins }}
          encryption-provider-config: /etc/kubernetes/encryption/config.yaml
          feature-gates: {{ .Values.apiServer.featureGates }}
          kubelet-preferred-address-types: "InternalIP"
          logtostderr: "true"
          {{- if .Values.oidc.issuerUrl }}
          {{- with .Values.oidc }}
          oidc-issuer-url: {{ .issuerUrl }}
          oidc-client-id: {{ .clientId }}
          oidc-username-claim: {{ .usernameClaim }}
          oidc-groups-claim: {{ .groupsClaim }}
          {{- if .usernamePrefix }}
          oidc-username-prefix: {{ .usernamePrefix | quote }}
          {{- end }}
          {{- if .caFile }}
          oidc-ca-file: {{ .caFile }}
          {{- end }}
          {{- end }}
          {{- end }}
          profiling: "false"
          requestheader-allowed-names: "front-proxy-client"
          runtime-config: "api/all=true"
          tls-cipher-suites: "TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384"
        extraVolumes:
          - name: encryption
            hostPath: /etc/kubernetes/encryption
            mountPath: /etc/kubernetes/encryption
            readOnly: false
            pathType: DirectoryOrCreate
      controllerManager:
        extraArgs:
          authorization-always-allow-paths: "/healthz,/readyz,/livez,/metrics"
          bind-address: "0.0.0.0"
          cloud-provider: external
          feature-gates: {{ .Values.controllerManager.featureGates }}
          logtostderr: "true"
          profiling: "false"
      etcd:
        local:
          extraArgs:
            listen-metrics-urls: "http://0.0.0.0:2381"
          imageRepository: {{ .Values.controlPlane.etcd.imageRepository }}
          imageTag: {{ .Values.controlPlane.etcd.imageTag }}
      scheduler:
        extraArgs:
          authorization-always-allow-paths: "/healthz,/readyz,/livez,/metrics"
          bind-address: "0.0.0.0"
    initConfiguration:
      patches:
        directory: "/tmp/kubeadm/patches"
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: {{ include "nodeName" . }}
    joinConfiguration:
      patches:
        directory: "/tmp/kubeadm/patches"
      nodeRegistration:
        kubeletExtraArgs:
          {{- include "kubeletExtraArgs" . | nindent  10}}
        name: {{ include "nodeName" . }}
    {{- if not .Values.ignition.enable }}
    useExperimentalRetryJoin: true
    {{- end }}
    files:
      {{- include "sshFiles" . | nindent 6 }}
      {{- include "kubeProxyFiles" . | nindent 6 }}
      - path: /etc/kubernetes/encryption/config.yaml
        permissions: "0600"
        contentFrom:
          secret:
            name: {{ include "resource.default.name" $ }}-encryption-provider-config
            key: encryption
      {{- range $kubeadmPatch, $_ :=  .Files.Glob  "files/etc/patches/**" }}
      - path: {{ (printf "/tmp/kubeadm/patches/%s" (base $kubeadmPatch)) }}
        content: |-
          {{- $.Files.Get $kubeadmPatch | nindent 10 }}
      {{- end }}
    preKubeadmCommands:
      {{- include "nodeNameReplacePreKubeadmCommands" . | nindent 6 }}
      {{- include "kubeProxyPreKubeadmCommands" . | nindent 6 }}
    postKubeadmCommands:
      {{- include "sshPostKubeadmCommands" . | nindent 6 }}
    users:
      {{- include "sshUsers" . | nindent 6 }}
  machineTemplate:
    infrastructureRef:
      apiVersion: {{ include "infrastructureApiVersion" . }}
      kind: OpenStackMachineTemplate
      name: {{ include "resource.default.name" . }}-control-plane-{{ include "osmtRevisionOfControlPlane" $.Values }}
  version: {{ .Values.kubernetesVersion }}
  replicas: {{ .Values.controlPlane.replicas }}
